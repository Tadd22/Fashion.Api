// <auto-generated />
using System;
using Fashion.Api.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Fashion.Api.Migrations
{
    [DbContext(typeof(FashionContext))]
    [Migration("20241128090958_Bloop")]
    partial class Bloop
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Fashion.Api.Models.Accessories", b =>
                {
                    b.Property<int>("AccessoriesID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AccessoriesID"));

                    b.Property<string>("AccessoriesType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CustomerID")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Stock")
                        .HasColumnType("int");

                    b.HasKey("AccessoriesID");

                    b.HasIndex("CustomerID");

                    b.ToTable("AccessoriesItems");
                });

            modelBuilder.Entity("Fashion.Api.Models.Bespoke", b =>
                {
                    b.Property<int>("BespokeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BespokeID"));

                    b.Property<int>("CustomerID")
                        .HasColumnType("int");

                    b.Property<DateTime>("DeliveryDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Measurements")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("BespokeID");

                    b.HasIndex("CustomerID");

                    b.ToTable("BespokeItems");
                });

            modelBuilder.Entity("Fashion.Api.Models.Customer", b =>
                {
                    b.Property<int>("CustomerID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CustomerID"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CustomerID");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("Fashion.Api.Models.ReadyToWear", b =>
                {
                    b.Property<int>("ReadyToWearID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ReadyToWearID"));

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CustomerID")
                        .HasColumnType("int");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Size")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Stock")
                        .HasColumnType("int");

                    b.HasKey("ReadyToWearID");

                    b.HasIndex("CustomerID");

                    b.ToTable("ReadyToWearItems");
                });

            modelBuilder.Entity("Fashion.Api.Models.Accessories", b =>
                {
                    b.HasOne("Fashion.Api.Models.Customer", "Customer")
                        .WithMany("Accessories")
                        .HasForeignKey("CustomerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("Fashion.Api.Models.Bespoke", b =>
                {
                    b.HasOne("Fashion.Api.Models.Customer", "Customer")
                        .WithMany("Bespokes")
                        .HasForeignKey("CustomerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("Fashion.Api.Models.ReadyToWear", b =>
                {
                    b.HasOne("Fashion.Api.Models.Customer", "Customer")
                        .WithMany("ReadyToWearItems")
                        .HasForeignKey("CustomerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("Fashion.Api.Models.Customer", b =>
                {
                    b.Navigation("Accessories");

                    b.Navigation("Bespokes");

                    b.Navigation("ReadyToWearItems");
                });
#pragma warning restore 612, 618
        }
    }
}
